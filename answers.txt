1:
>>> Artist.objects.get(name="Queen")
<Artist: Artist object (51)>
>>> Album.objects.filter(artist=51)
<QuerySet [<Album: Album object (32)>, <Album: Album object (181)>, <Album: Album object (182)>]>
>>> Album.objects.filter(artist=51).count()
3
>>> Album.objects.get(pk=32).title
'Greatest Hits II'
>>> Album.objects.get(pk=181).title
'Greatest Hits I'
>>> Album.objects.get(pk=182).title
'News Of The World'

2:
>>> MediaType.objects.get(name='Protected MPEG-4 video file')
<MediaType: MediaType object (3)>
>>> Track.objects.filter(media_type=3).count()
214

3:
>>> Genre.objects.get(name='Hip Hop/Rap')
<Genre: Genre object (17)>

4:
>>> Track.objects.filter(genre=17).count()
35

5:
In milliseconds
>>> Track.objects.aggregate(Sum('milliseconds'))
{'milliseconds__sum': 1377942652}
In minutes
>>> Track.objects.aggregate(Sum('milliseconds'))['milliseconds__sum']/60000
22965.710866666668

6:
>>> MediaType.objects.get(name='MPEG audio file')
<MediaType: MediaType object (1)>
>>> Track.objects.filter(media_type=1).aggregate(Max('unit_price'))
{'unit_price__max': Decimal('0.99')}

7:
>>> MediaType.objects.get(name='MPEG audio file')
<MediaType: MediaType object (1)>
>>> Track.objects.filter(media_type=1).order_by('-unit_price')[0].name
'Put The Finger On You'

8:
>>> Artist.objects.order_by('created_at')[0].name
'Les Arts Florissants & William Christie'
>>> Artist.objects.order_by('created_at')[1].name
'Baby Consuelo'

9:
>>> Genre.objects.get(name='Electronica/Dance').track_set.order_by('-unit_price')[0].name
'Instinto Colectivo'

10:
>>> MediaType.objects.get(name='MPEG audio file')
<MediaType: MediaType object (1)>
>>> Genre.objects.get(name='Electronica/Dance')
<Genre: Genre object (15)>
>>> Track.objects.filter(media_type=1, genre=15)
<QuerySet [<Track: Track object (3319)>, <Track: Track object (3320)>, <Track: Track object (3321)>, <Track: Track object (3322)>, <Track: Track object (3323)>, <Track: Track object (3324)>, <Track: Track object (3325)>, <Track: Track object (3327)>, <Track: Track object (3328)>, <Track: Track object (3329)>, <Track: Track object (3330)>, <Track: Track object (3331)>, <Track: Track object (3333)>, <Track: Track object (3334)>, <Track: Track object (3335)>, <Track: Track object (1456)>, <Track: Track object (1463)>, <Track: Track object (1455)>, <Track: Track object (3326)>, <Track: Track object (3332)>, '...(remaining elements truncated)...']>
>>> Track.objects.filter(media_type=1, genre=15).count()
28
